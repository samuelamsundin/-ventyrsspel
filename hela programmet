import random as rand
import time
from playsound import playsound

#Deklarerar att inventoryn från början är tomt 
inventory = []
helande_inventory = []

#En del som anger vad man kan hitta i en kista, som sedan delas upp i helande items och styrkebonus. Vilket senare används när man avgör vad man hittar för något.
kistitems = ["en helande dryck", "ett svärd", "en blå ring", "en krona", "en rustning", "en sköld", "ett magiskt bandage", "en amulet", "en röd ring"]
helande_items = ["en helande dryck", "en blå ring", "ett magiskt bandage", "en amulet"]
str_items = ["ett svärd", "en krona", "en rustning", "en sköld", "en röd ring"]
kroppsdelar = ["bålen", "vänsterben", "högerben", "vänsterarm", "högerarm", "huvud"]

Monster = [["en drake", "draken"], ["en ork", "orken"], ["en ödlemänniska", "ödlemänniskan"], ["en varg", "vargen"], ["ett spöke", "spöket"], ["en zombie", "zombien"]]
x = [0, 1, 3, 5, 2]
y = [4]


#En del som skapar klssen spelare med diverse attribut. Och som definierar vilket kroppsdel som kommer bli träffad och vad som händer då. 

class Player():
    def __init__(self, namn, HP_huvud, HP_bål, HP_vänsterarm, HP_högerarm, HP_vänsterben, HP_högerben, level, styrka):   
        self.namn = namn
        self.HP_huvud = HP_huvud
        self.HP_bål = HP_bål
        self.HP_vänsterarm = HP_vänsterarm
        self.HP_högerarm = HP_högerarm
        self.HP_vänsterben = HP_vänsterben
        self.HP_högerben = HP_högerben
        self.level = level
        self.styrka = styrka

    def träff_del(self, skada):
        träffdel = rand.randint(1, 11)
        if träffdel == 1 or träffdel == 2:
            self.HP_vänsterben = self.HP_vänsterben - skada
            if self.HP_vänsterben < 0:
                if "vänsterben" in döda_kroppsdelar:
                    a = a
                else:
                    döda_kroppsdelar.append("vänsterben")
            return "vänsterbenet"
        elif träffdel == 3 or träffdel == 4:
            self.HP_högerben= self.HP_högerben - skada
            if self.HP_högerben < 0:
                if "högerben" in döda_kroppsdelar:
                    a = a
                else:
                    döda_kroppsdelar.append("högerben")
            return "högerbenet"
        elif träffdel == 5 or träffdel == 6:
            self.HP_bål = self.HP_bål - skada
            if self.HP_bål < 0:
                if "bålen" in döda_kroppsdelar:
                    a = a
                else:
                    döda_kroppsdelar.append("bålen")
            return "bålen"
        elif träffdel == 7 or träffdel == 8:
            self.HP_vänsterarm = self.HP_vänsterarm - skada
            if self.HP_vänsterarm < 0:
                if "vänsterarm" in döda_kroppsdelar:
                    a = a
                else:
                    döda_kroppsdelar.append("vänsterarm")
            return "vänsterarmen"
        elif träffdel == 9 or träffdel == 10:
            self.HP_högerarm = self.HP_högerarm - skada
            if self.HP_högerarm < 0:
                if "högerarm" in döda_kroppsdelar:
                    a = a
                else:
                    döda_kroppsdelar.append("högerarm")
            return "högerarmen"
        else:
            self.HP_huvud = self.HP_huvud - skada
            return "huvudet"
    
    def nya_namnet(self):
        nytt_namn = input("Vad ska din karatär heta?")
        nytt_namn = nytt_namn.title()
        self.namn = nytt_namn

    def Döda_kroppsdelar(self):
        if self.HP_huvud < 0:
            return True
        elif len(döda_kroppsdelar) == 2:
            return True
        else:
            return False

class Item():
    def __init__(self, name, STR_bonus, healing):
        self.name = name
        self.STR_bonus = STR_bonus
        self.healing = healing
        
BlåRing_Item = ("Blå ring", 0, 0)
Enhelandedryck_Item = ("En helande dryck", 0, 0)
EttSvärd_Item = ("Ett svärd", 0, 0)
EnKrona_Item = ("En krona", 0, 0)
EnRustning_Item("En rustning", 0, 0)
EnSköld_Item = ("En sköld", 0, 0)
EttMagisktBandage_Item = ("Ett magiskt bandage", 0, 0)
EnAmulet_Item = ("En amulet", 0, 0)
EnRödRing_Item = ("En röd ring", 0, 0)

#Ett tomt inventory dit kroppsdelar hamnar om deras hp går till noll

döda_kroppsdelar = []


#Varje gång man ska välja vad man vill göra körs det här programmet 

def valet():
    while True:
        Valet = input("""\nVad vill du göra?
    1. Se din karaktärs egenskaper?
    2. Se ditt inventory?
    3. Välja en dörr?
    4. Använda ett helande item?""")
        if Valet == "1":
            print(f"""
    I högerbenet har du {A_Player.HP_högerben}hp
    I vänsterbenet har du {A_Player.HP_vänsterben}hp
    I högerarmen har du {A_Player.HP_högerarm}hp
    I vänsterarmen har du {A_Player.HP_vänsterarm}hp
    I bålen har du {A_Player.HP_bål}hp
    I huvudet har du {A_Player.HP_huvud}hp

    Du har förlorat {döda_kroppsdelar}

    Din styrka är {A_Player.styrka}
    Du är i level {A_Player.level}""")
        elif Valet == "2":
            print(inventory)
            fråga = input("\nVill du plocka bort något?")
            fråga = fråga.lower
            if fråga == "ja":
                borttaget_item = input("Vilket item vill du plocka bort?")
                borttaget_item in ["1","2","3","4","5"]:
                    borttaget_item = int(borttaget_item)
                    borttaget_item = borttaget_item - 1
                    lista_för_items = len(inventory)
                    if borttaget_item <= lista_för_items:
                        inventory.pop()
            elif fråga = "nej":
            time.sleep(2)
        elif Valet == "3":
            while True:
                val_dörr = input("Vilken dörr vill du välja? 1, 2 eller 3?")
                if val_dörr in ["1","2","3"]:
                    Dörr = rand.randint (1,3)
                    if Dörr == 1:
                        monster(A_Player)
                        break
                    elif Dörr == 2:
                        fälla(A_Player)
                        break
                    else:
                        kista(A_Player)
                        break
                else:
                    print("Otillåtet svar")
        elif Valet == "4":
            
        else:
            print("Otillåtet svar")
       

def hela():
    fråga = input("Du är skadad. Vill du hela dig själv?")
    fråga = fråga.lower()
    if fråga == "ja":
        while True:
            print(helande_invenetory)
            använt_helande_item = input("Vilket item vill du använda?")
            if använt_helande_item in ["1", "2", "3", "4", "5"]:
                använt_helande_item = int(använt_helande_item)
                lista_för_helande_items = len(helande_inventory)
                if använt_helande_item <= lista_för_helande_items:
                    använt_helande_item = använt_helande_item - 1
                    helande_inventory.pop(använt_helande_item)
                    while True:
                        helad_kropssdel = input("Vilken kropppsdel vill du hela?")
                        helad_kroppsdel = helad_kroppsdel.lower()
                        if helad_kroppsdel in kroppsdelar:
                            #lägga till itemets bonus i hp i den kroppsdelen
                        else:
                            print("Otillåten kroppsdel")
            else:
                print("Otillåtet val på kroppsdel")
    elif fråga == "nej":
        continue


#Allt som händer när man stöter på ett monster

def monster(self):
    Monster_namn = rand.randint(0,len(Monster) - 1)
    print(f"\n{self.namn} stöter på {Monster[Monster_namn][0]}!")
    time.sleep(3)
    m_styrka = rand.randint(1, 10)
    if m_styrka > self.styrka:
        Skada = A_Player.träff_del(m_styrka)
        print(f"\n{Monster[Monster_namn][1].title()} är för stark och {self.namn} tappar {m_styrka} hp i {Skada}")
        hela()
    elif m_styrka == self.styrka:
        print(f"Ni är lika starka och {Monster[Monster_namn][1]} springer iväg")
    else:
        if Monster_namn in x:
            print(f"\n{self.namn} är starkare än {Monster[Monster_namn][1]} och besegrar den. {self.namn} går upp en level")
        else:
            print(f"\n{self.namn} är starkare än {Monster[Monster_namn][1]} och besegrar det. {self.namn} går upp en level")
        self.level = self.level + 1

#En funktion som tar hand om vad som händer när man hittar en kista
        
def kista(self):
    bonus = rand.randint(1, 10)
    print("\nI rummet hittar du en kista!")
    item = rand.choice(kistitems)
    print(f"\nI kistan hittar du {item} med {bonus} i bonus.")
    time.sleep(2)
    while True:
        kist_val = input("Vill du lägga till den i ditt inventory?")
        kist_val = kist_val.lower()
        if kist_val == "ja":
            if item in inventory:
                #Här ska frågas om man vill byta ut det item man redan har mot det man hittat eller om man inte vill det.
                print()
                inventory.append(item)
                item = item.title()
                print(item)
                print(f"\n{item} lades till i {self.namn} inventory")
                item = item.lower()
                if item in str_items:
                    A_Player.styrka = A_Player.styrka + bonus
                elif item in helande_items:
                    helande_inventory.append(item)
                    inventory.append(item)
                break
            elif kist_val == "nej":
                break
        else:
            print("Otillåtet svar"):
                


#En funktion som tar hand om vad som händer när man stöter på en fälla

def fälla(self):
    while True:
        time.sleep(4)
        print("\nDet här rummet verkar tomt...")
        time.sleep(6)
        print(f"\nHoppsan! {self.namn} stöter på en fälla!")
        skada = rand.randint(1, 10)
        Skada = A_Player.träff_del(skada)
        print(f"Du tar {skada} skada i {Skada}")
        time.sleep(1.5)
        hela()
        break
    

#Huvudprogram

A_Player = Player("name",15,15,10,10,10,10,1,5)
A_Player.nya_namnet()
print("Välkomen. Stig in i om du vågar...\n")
time.sleep(2)
while A_Player.level <= 10:
    valet()
    if A_Player.Döda_kroppsdelar() == True:
        break
print("Du förlorar")
